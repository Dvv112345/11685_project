10/20/2025 23:26:00 - INFO - __main__ - ***** Training arguments *****
10/20/2025 23:26:00 - INFO - __main__ - Namespace(config='configs/ddpm.yaml', data_dir='/ocean/projects/cis250019p/jye9/11685-project/data', image_size=128, batch_size=64, num_workers=4, num_classes=10, run_name='exp-0-ddpm', output_dir='/ocean/projects/cis250019p/jye9/11685-project/experiments', num_epochs=5, learning_rate=0.01, weight_decay=0.01, grad_clip=1.0, seed=42, mixed_precision='none', num_train_timesteps=1000, num_inference_steps=1000, beta_start=0.0001, beta_end=0.02, beta_schedule='linear', variance_type='fixed_small', prediction_type='epsilon', clip_sample=True, clip_sample_range=1.0, optimizer_type='AdamW', scheduler_type='ConsineAnnealingLR', unet_in_size=128, unet_in_ch=3, unet_ch=128, unet_ch_mult=[1, 2, 2, 4], unet_attn=[2, 3], unet_num_res_blocks=2, unet_dropout=0.0, latent_ddpm=False, pretrained_vae='pretrained/model.ckpt', use_cfg=False, cfg_guidance_scale=2.0, use_ddim=False, ckpt=None, predictor_type='epsilon', distributed=False, world_size=1, rank=0, local_rank=0, device='cuda', total_batch_size=64, max_train_steps=3905)
10/20/2025 23:26:00 - INFO - __main__ - ***** Running training *****
10/20/2025 23:26:00 - INFO - __main__ -   Num examples = 50000
10/20/2025 23:26:00 - INFO - __main__ -   Num Epochs = 5
10/20/2025 23:26:00 - INFO - __main__ -   Instantaneous batch size per device = 64
10/20/2025 23:26:00 - INFO - __main__ -   Total train batch size (w. parallel, distributed & accumulation) = 64
10/20/2025 23:26:00 - INFO - __main__ -   Total optimization steps per epoch 781
10/20/2025 23:26:00 - INFO - __main__ -   Total optimization steps = 3905
  0%|                                                                                      | 0/3905 [00:00<?, ?it/s]10/20/2025 23:26:00 - INFO - __main__ - Epoch 1/5
Traceback (most recent call last):
  File "/jet/home/jye9/Project/11685_project/train.py", line 508, in <module>
    main()
  File "/jet/home/jye9/Project/11685_project/train.py", line 437, in main
    model_pred = unet(noisy_images, timesteps, class_emb)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/ocean/projects/cis250019p/jye9/conda/envs/11685/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1773, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/ocean/projects/cis250019p/jye9/conda/envs/11685/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1784, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/jet/home/jye9/Project/11685_project/models/unet.py", line 93, in forward
    h = layer(h, temb, c)
        ^^^^^^^^^^^^^^^^^
  File "/ocean/projects/cis250019p/jye9/conda/envs/11685/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1773, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/ocean/projects/cis250019p/jye9/conda/envs/11685/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1784, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/jet/home/jye9/Project/11685_project/models/unet_modules.py", line 206, in forward
    h = self.block1(x)
        ^^^^^^^^^^^^^^
  File "/ocean/projects/cis250019p/jye9/conda/envs/11685/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1773, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/ocean/projects/cis250019p/jye9/conda/envs/11685/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1784, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/ocean/projects/cis250019p/jye9/conda/envs/11685/lib/python3.12/site-packages/torch/nn/modules/container.py", line 244, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "/ocean/projects/cis250019p/jye9/conda/envs/11685/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1773, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/ocean/projects/cis250019p/jye9/conda/envs/11685/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1784, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/ocean/projects/cis250019p/jye9/conda/envs/11685/lib/python3.12/site-packages/torch/nn/modules/activation.py", line 434, in forward
    return F.silu(input, inplace=self.inplace)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/ocean/projects/cis250019p/jye9/conda/envs/11685/lib/python3.12/site-packages/torch/nn/functional.py", line 2375, in silu
    return torch._C._nn.silu(input)
           ^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 1.50 GiB. GPU 0 has a total capacity of 31.73 GiB of which 274.44 MiB is free. Including non-PyTorch memory, this process has 31.46 GiB memory in use. Of the allocated memory 28.98 GiB is allocated by PyTorch, and 2.11 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
